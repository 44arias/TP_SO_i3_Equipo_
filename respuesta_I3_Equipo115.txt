Alumnos: Yamila Sueldo, Valentino Arias y Agustin Di Leone

a. Después de realizar los cambios y merges, contiene los archivos: CPUAlfa, CPUBeta, CPUGamma, readme, beta.txt y datos.txt con sus respectivos contenidos.
b. Sí, Beta pudo ver todos los cambios que se realizaron. Git maneja la gestión de ramas y permite que los colaboradores vean los cambios realizados en otras ramas.
c. En el punto 5, Beta debe realizar los siguientes comandos para hacer el merge:
git checkout master
git merge GAMMA
git commit -m "Merge de la rama GAMMA"

d. Sí, las ramas creadas por BETA (Arias) y GAMMA (DiLeone) quedan actualizadas con los datos que cada uno modificó en sus respectivas ramas.
e. No, no tuvimos ningun problema al hacer marge.
f. Los comandos realizados para cumplir el punto 7 son:
   Descargar el repositorio en la rama creada por BETA (Arias):
   git clone https://github.com/44arias/TP_SO_i3_Equipo_.git
   cd TP_SO_i3_Equipo_
   git checkout -b Arias origin/Arias
   notepad beta.txt
   (Agregue la info requerida usando ipconfig en otra terminal)
   git add beta.txt
   git commit -m "Modificaciones realizadas por GAMMA en beta.txt"
   git push origin Arias
g.Para resolver el punto 8, los pasos fueron:
  1) Iniciar git
  git init
  2)Clonar el repositorio remoto y asegurame de estar en el directorio indicado.
  git clone https://github.com/44arias/TP_SO_i3_Equipo_
  cd TP_SO_i3_Equipo_
  3) Me muevo a la rama de GAMMA
  git checkout -b Arias origin/Arias
  4)Modifico el archivo beta.txt
  echo Nombre y apellido: Yamila Sueldo >> beta.txt
  echo Información de ifconfig: >> beta.txt
  ifconfig >> beta.txt
  echo Hora: Mon Nov 20 18:30:28 2023 >> beta.txt
  5) Agrego el archivo modificado, realizo el commit y push para subir los cambios al repositorio remoto
  git add beta.txt
  git commit -m Alfa modifica beta.txt
  git push origin Arias
